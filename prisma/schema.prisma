// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// npx prisma migrate dev --name "edit"
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户
model User {
  id       Int       @id @default(autoincrement())
  createTime DateTime @default(now()) @map("create_time")
  updateTime DateTime @updatedAt @map("update_time")
  phone    BigInt?       @unique // 手机号码
  name     String? // 用户名称
  avatar     String?
  sex      Int? @default(1) //性别 1男 2女
  birthday DateTime? //生日
  password String
  openId String? @unique// 微信小程序openid
  status Int? @default(1) //状态 1启用 2禁用
  addresss UserAddress[]
}

// 验证码
model Captcha {
  id       Int       @id @default(autoincrement())
  createTime DateTime @default(now()) @map("create_time")
  updateTime DateTime @updatedAt @map("update_time")
  account     String?
  code     String
  expiresTime DateTime @map("expires_time")
  used Int @default(0) //是否使用 0未使用 1已使用
}

// 用户地址
model UserAddress {
  id         Int      @id @default(autoincrement())
  createTime DateTime @default(now()) @map("create_time")
  updateTime DateTime @updatedAt @map("update_time")
  name       String //联系人姓名
  sex        Int? @default(1) //性别 1男 2女
  phone      String //手机号码
  isDefault  Boolean  @default(false) @map("is_default") // 是否默认地址
  latitude   String? //纬度，浮点数，范围为-90~90，负数表示南纬
  longitude  String? //经度，浮点数，范围为-180~180，负数表示西经
  country    String?   @default("中国") //国家
  province   String //省份名称
  city       String //城市名称
  district   String //区（县）名称
  street     String //街道信息
  streetNum  String //获取街道门牌号信息
  cityCode   String? //城市代码
  user       User?    @relation(fields: [userId], references: [id])
  userId     Int?
}

// 商铺
model Shop {
  id         Int        @id @default(autoincrement())
  createTime DateTime   @default(now()) @map("create_time")
  updateTime DateTime   @updatedAt @map("update_time")
  no         Int
  logo       String //标识
  latitude   String //纬度，浮点数，范围为-90~90，负数表示南纬
  longitude  String //经度，浮点数，范围为-180~180，负数表示西经
  country    String     @default("中国") //国家
  province   String //省份名称
  city       String //城市名称
  district   String //区（县）名称
  street     String //街道信息
  streetNum  String //获取街道门牌号信息
  cityCode   String //城市代码
  employees  Employee[]
  tables     Table[]
  categorys  Category[]
}

// 员工
model Employee {
  id            Int      @id @default(autoincrement())
  createTime    DateTime @default(now()) @map("create_time")
  updateTime    DateTime @updatedAt @map("update_time")
  name          String //姓名
  sex           Int //性别 1男 2女
  // idNumber      Int @map("id_number") //身份证号
  // pwassword      String //密码
  // status Boolean @default(true) //状态
  phone         String //手机号码
  birthday      DateTime? //生日
  //婚姻状态 1未婚 2已婚 3离异 4丧偶
  maritalStatus Int @map("marital_status")
  entryDate     DateTime @map("entry_date") //入职日期
  // 职位
  shop          Shop?    @relation(fields: [shopId], references: [id])
  shopId        Int?
}

// 餐桌
model Table {
  id         Int      @id @default(autoincrement())
  createTime DateTime @default(now()) @map("create_time")
  updateTime DateTime @updatedAt @map("update_time")
  name       String //名称
  no         String //编号
  qrCode     String   @map("qr_code") //二维码
  shop       Shop?    @relation(fields: [shopId], references: [id])
  shopId     Int?
}

// 产品类别
model Category {
  id         Int       @id @default(autoincrement())
  createTime DateTime  @default(now()) @map("create_time")
  updateTime DateTime  @updatedAt @map("update_time")
  name       String //名称
  // status Boolean @default(true) //状态
  // sort        Int       @default(0) // 排序
  shop       Shop?     @relation(fields: [shopId], references: [id])
  shopId     Int
  products   Product[]
}

// 产品
model Product {
  id         Int       @id @default(autoincrement())
  createTime DateTime  @default(now()) @map("create_time")
  updateTime DateTime  @updatedAt @map("update_time")
  name       String //名称
  originalPrice String @map("original_price")//原价
  currentPrice String? @map("current_price")// 现价
   // status Boolean @default(true) //状态
  pictures String[]
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
}

// coupon 优惠券
// integral 积分
// order 订单
// role
